#!/usr/bin/env ruby
#
# git-autocommit
# Copyright Â© 2011 Chris Riddoch
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

require 'directory_watcher'
require 'fileutils'
require 'find'
include FileUtils

work_tree = ARGV[0]

dw = DirectoryWatcher.new work_tree, :glob => '**/*', :pre_load => true
dw.interval = 2.0
dw.stable = 2

dw.add_observer {|*args|
    args.each {|event|
      if event.path =~ /\.git\//  # I guess this won't happen unless the glob is changed?
         puts "Git repository changed, ignored."
      else
         puts "Event observed: #{event}"
         cd(work_tree) do
           `git add -A .`
           `git commit -m "Autocommit"`
         end
      end
}}


dw.start
puts "Waiting for events; press enter to exit"
STDIN.gets      # when the user hits "enter" the script will terminate
dw.stop
